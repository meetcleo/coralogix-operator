// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coralogix/coralogix-operator/controllers/clientset (interfaces: RecordingRulesGroupsClientInterface)
//
// Generated by this command:
//
//	mockgen -destination=../mock_clientset/mock_recordingrulesgroups-client.go -package=mock_clientset github.com/coralogix/coralogix-operator/controllers/clientset RecordingRulesGroupsClientInterface
//

// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	context "context"
	reflect "reflect"

	__ "github.com/coralogix/coralogix-operator/controllers/clientset/grpc/recording-rules-groups/v2"
	gomock "go.uber.org/mock/gomock"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// MockRecordingRulesGroupsClientInterface is a mock of RecordingRulesGroupsClientInterface interface.
type MockRecordingRulesGroupsClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRecordingRulesGroupsClientInterfaceMockRecorder
}

// MockRecordingRulesGroupsClientInterfaceMockRecorder is the mock recorder for MockRecordingRulesGroupsClientInterface.
type MockRecordingRulesGroupsClientInterfaceMockRecorder struct {
	mock *MockRecordingRulesGroupsClientInterface
}

// NewMockRecordingRulesGroupsClientInterface creates a new mock instance.
func NewMockRecordingRulesGroupsClientInterface(ctrl *gomock.Controller) *MockRecordingRulesGroupsClientInterface {
	mock := &MockRecordingRulesGroupsClientInterface{ctrl: ctrl}
	mock.recorder = &MockRecordingRulesGroupsClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecordingRulesGroupsClientInterface) EXPECT() *MockRecordingRulesGroupsClientInterfaceMockRecorder {
	return m.recorder
}

// CreateRecordingRuleGroupSet mocks base method.
func (m *MockRecordingRulesGroupsClientInterface) CreateRecordingRuleGroupSet(arg0 context.Context, arg1 *__.CreateRuleGroupSet) (*__.CreateRuleGroupSetResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRecordingRuleGroupSet", arg0, arg1)
	ret0, _ := ret[0].(*__.CreateRuleGroupSetResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateRecordingRuleGroupSet indicates an expected call of CreateRecordingRuleGroupSet.
func (mr *MockRecordingRulesGroupsClientInterfaceMockRecorder) CreateRecordingRuleGroupSet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRecordingRuleGroupSet", reflect.TypeOf((*MockRecordingRulesGroupsClientInterface)(nil).CreateRecordingRuleGroupSet), arg0, arg1)
}

// DeleteRecordingRuleGroupSet mocks base method.
func (m *MockRecordingRulesGroupsClientInterface) DeleteRecordingRuleGroupSet(arg0 context.Context, arg1 *__.DeleteRuleGroupSet) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRecordingRuleGroupSet", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRecordingRuleGroupSet indicates an expected call of DeleteRecordingRuleGroupSet.
func (mr *MockRecordingRulesGroupsClientInterfaceMockRecorder) DeleteRecordingRuleGroupSet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRecordingRuleGroupSet", reflect.TypeOf((*MockRecordingRulesGroupsClientInterface)(nil).DeleteRecordingRuleGroupSet), arg0, arg1)
}

// GetRecordingRuleGroupSet mocks base method.
func (m *MockRecordingRulesGroupsClientInterface) GetRecordingRuleGroupSet(arg0 context.Context, arg1 *__.FetchRuleGroupSet) (*__.OutRuleGroupSet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecordingRuleGroupSet", arg0, arg1)
	ret0, _ := ret[0].(*__.OutRuleGroupSet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecordingRuleGroupSet indicates an expected call of GetRecordingRuleGroupSet.
func (mr *MockRecordingRulesGroupsClientInterfaceMockRecorder) GetRecordingRuleGroupSet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecordingRuleGroupSet", reflect.TypeOf((*MockRecordingRulesGroupsClientInterface)(nil).GetRecordingRuleGroupSet), arg0, arg1)
}

// UpdateRecordingRuleGroupSet mocks base method.
func (m *MockRecordingRulesGroupsClientInterface) UpdateRecordingRuleGroupSet(arg0 context.Context, arg1 *__.UpdateRuleGroupSet) (*emptypb.Empty, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateRecordingRuleGroupSet", arg0, arg1)
	ret0, _ := ret[0].(*emptypb.Empty)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateRecordingRuleGroupSet indicates an expected call of UpdateRecordingRuleGroupSet.
func (mr *MockRecordingRulesGroupsClientInterfaceMockRecorder) UpdateRecordingRuleGroupSet(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRecordingRuleGroupSet", reflect.TypeOf((*MockRecordingRulesGroupsClientInterface)(nil).UpdateRecordingRuleGroupSet), arg0, arg1)
}
