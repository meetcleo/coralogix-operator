// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coralogix/coralogix-operator/controllers/clientset (interfaces: ClientSetInterface)
//
// Generated by this command:
//
//	mockgen -destination=../mock_clientset/mock_clientset.go -package=mock_clientset github.com/coralogix/coralogix-operator/controllers/clientset ClientSetInterface
//

// Package mock_clientset is a generated GoMock package.
package mock_clientset

import (
	reflect "reflect"

	clientset "github.com/coralogix/coralogix-operator/controllers/clientset"
	gomock "go.uber.org/mock/gomock"
)

// MockClientSetInterface is a mock of ClientSetInterface interface.
type MockClientSetInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientSetInterfaceMockRecorder
}

// MockClientSetInterfaceMockRecorder is the mock recorder for MockClientSetInterface.
type MockClientSetInterfaceMockRecorder struct {
	mock *MockClientSetInterface
}

// NewMockClientSetInterface creates a new mock instance.
func NewMockClientSetInterface(ctrl *gomock.Controller) *MockClientSetInterface {
	mock := &MockClientSetInterface{ctrl: ctrl}
	mock.recorder = &MockClientSetInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientSetInterface) EXPECT() *MockClientSetInterfaceMockRecorder {
	return m.recorder
}

// Alerts mocks base method.
func (m *MockClientSetInterface) Alerts() clientset.AlertsClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Alerts")
	ret0, _ := ret[0].(clientset.AlertsClientInterface)
	return ret0
}

// Alerts indicates an expected call of Alerts.
func (mr *MockClientSetInterfaceMockRecorder) Alerts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Alerts", reflect.TypeOf((*MockClientSetInterface)(nil).Alerts))
}

// Dashboards mocks base method.
func (m *MockClientSetInterface) Dashboards() clientset.DashboardsClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dashboards")
	ret0, _ := ret[0].(clientset.DashboardsClientInterface)
	return ret0
}

// Dashboards indicates an expected call of Dashboards.
func (mr *MockClientSetInterfaceMockRecorder) Dashboards() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dashboards", reflect.TypeOf((*MockClientSetInterface)(nil).Dashboards))
}

// RecordingRuleGroups mocks base method.
func (m *MockClientSetInterface) RecordingRuleGroups() clientset.RecordingRulesGroupsClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecordingRuleGroups")
	ret0, _ := ret[0].(clientset.RecordingRulesGroupsClientInterface)
	return ret0
}

// RecordingRuleGroups indicates an expected call of RecordingRuleGroups.
func (mr *MockClientSetInterfaceMockRecorder) RecordingRuleGroups() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordingRuleGroups", reflect.TypeOf((*MockClientSetInterface)(nil).RecordingRuleGroups))
}

// RuleGroups mocks base method.
func (m *MockClientSetInterface) RuleGroups() clientset.RuleGroupsClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RuleGroups")
	ret0, _ := ret[0].(clientset.RuleGroupsClientInterface)
	return ret0
}

// RuleGroups indicates an expected call of RuleGroups.
func (mr *MockClientSetInterfaceMockRecorder) RuleGroups() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RuleGroups", reflect.TypeOf((*MockClientSetInterface)(nil).RuleGroups))
}

// Webhooks mocks base method.
func (m *MockClientSetInterface) Webhooks() clientset.WebhooksClientInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Webhooks")
	ret0, _ := ret[0].(clientset.WebhooksClientInterface)
	return ret0
}

// Webhooks indicates an expected call of Webhooks.
func (mr *MockClientSetInterfaceMockRecorder) Webhooks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Webhooks", reflect.TypeOf((*MockClientSetInterface)(nil).Webhooks))
}
